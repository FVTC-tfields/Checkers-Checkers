// <auto-generated />
using System;
using Checkers.PL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Checkers.PL.Migrations
{
    [DbContext(typeof(CheckersEntities))]
    [Migration("20240403183209_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Checkers.PL.Entities.tblGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("GameDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("GameStateId")
                        .IsUnicode(false)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Winner")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("tblUserGameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblGame_Id");

                    b.HasIndex("GameStateId");

                    b.HasIndex("tblUserGameId");

                    b.ToTable("tblGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b0c26673-6df2-4271-85d3-f298714ae8df"),
                            GameDate = new DateTime(2024, 4, 3, 13, 32, 7, 454, DateTimeKind.Local).AddTicks(8108),
                            GameStateId = new Guid("0a20964c-b349-49ee-97dd-8eb8de62ad7d"),
                            Name = "Example",
                            Winner = ""
                        },
                        new
                        {
                            Id = new Guid("64590857-c346-45f1-8f8e-7b486a1378ef"),
                            GameDate = new DateTime(2024, 4, 3, 13, 32, 7, 454, DateTimeKind.Local).AddTicks(8148),
                            GameStateId = new Guid("92dfaa2f-bc16-44ef-97aa-914fb2c57de2"),
                            Name = "George",
                            Winner = ""
                        },
                        new
                        {
                            Id = new Guid("042aec28-94e5-4862-9d5f-f2bb27fb290e"),
                            GameDate = new DateTime(2024, 4, 3, 13, 32, 7, 454, DateTimeKind.Local).AddTicks(8150),
                            GameStateId = new Guid("7d2f3a5c-70c3-4677-9ff7-f846520dde0e"),
                            Name = "Hanna",
                            Winner = ""
                        },
                        new
                        {
                            Id = new Guid("4171f106-c9b6-4ad0-883e-168c50222e55"),
                            GameDate = new DateTime(2024, 4, 3, 13, 32, 7, 454, DateTimeKind.Local).AddTicks(8152),
                            GameStateId = new Guid("da7d1f88-73b5-4ea4-b265-092b3914cb91"),
                            Name = "World War 42",
                            Winner = "MetalWhee3l"
                        });
                });

            modelBuilder.Entity("Checkers.PL.Entities.tblGameState", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Column")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsKing")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblGameState_Id");

                    b.ToTable("tblGameState", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a20964c-b349-49ee-97dd-8eb8de62ad7d"),
                            Column = "4",
                            IsKing = true,
                            Row = "1"
                        },
                        new
                        {
                            Id = new Guid("92dfaa2f-bc16-44ef-97aa-914fb2c57de2"),
                            Column = "4",
                            IsKing = false,
                            Row = "5"
                        },
                        new
                        {
                            Id = new Guid("7d2f3a5c-70c3-4677-9ff7-f846520dde0e"),
                            Column = "8",
                            IsKing = false,
                            Row = "2"
                        },
                        new
                        {
                            Id = new Guid("801c7e5e-1a33-4bc7-afaa-cca8ac1590b0"),
                            Column = "10",
                            IsKing = false,
                            Row = "1"
                        },
                        new
                        {
                            Id = new Guid("da7d1f88-73b5-4ea4-b265-092b3914cb91"),
                            Column = "1",
                            IsKing = true,
                            Row = "7"
                        });
                });

            modelBuilder.Entity("Checkers.PL.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<Guid?>("tblUserGameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblUser_Id");

                    b.HasIndex("tblUserGameId");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("582b65b0-d22b-4826-a1f2-cc0c94288d5f"),
                            FirstName = "Barney",
                            LastName = "Smith",
                            Nickname = "Nickname",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "MetalWhee3l"
                        },
                        new
                        {
                            Id = new Guid("b6934c9a-745a-4bff-b3b0-4435a6295a8a"),
                            FirstName = "John",
                            LastName = "Doro",
                            Nickname = "Nickname",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "jdoro"
                        },
                        new
                        {
                            Id = new Guid("076a44d7-9578-42cf-bc81-f22664f2a1ff"),
                            FirstName = "Brian",
                            LastName = "Foote",
                            Nickname = "Nickname",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "bfoote"
                        },
                        new
                        {
                            Id = new Guid("da191dc2-8ad3-41c4-a182-12a1523e7ef2"),
                            FirstName = "Other",
                            LastName = "Other",
                            Nickname = "Nickname",
                            Password = "X1BEO/529yeajg8vCpiXXNv/OOk=",
                            UserName = "sophie"
                        });
                });

            modelBuilder.Entity("Checkers.PL.Entities.tblUserGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("GameId")
                        .IsUnicode(false)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .IsUnicode(false)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblUserGame_Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("tblUserGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3152a920-04a7-4189-94ef-9c2065c04a36"),
                            Color = "Red",
                            GameId = new Guid("b0c26673-6df2-4271-85d3-f298714ae8df"),
                            UserId = new Guid("582b65b0-d22b-4826-a1f2-cc0c94288d5f")
                        },
                        new
                        {
                            Id = new Guid("7c1c1ec6-3eae-45ab-90a5-e329e1359798"),
                            Color = "Black",
                            GameId = new Guid("b0c26673-6df2-4271-85d3-f298714ae8df"),
                            UserId = new Guid("b6934c9a-745a-4bff-b3b0-4435a6295a8a")
                        },
                        new
                        {
                            Id = new Guid("78adffd4-d9b6-497b-ba5d-8ea4d75cb1e5"),
                            Color = "Red",
                            GameId = new Guid("b0c26673-6df2-4271-85d3-f298714ae8df"),
                            UserId = new Guid("076a44d7-9578-42cf-bc81-f22664f2a1ff")
                        });
                });

            modelBuilder.Entity("Checkers.PL.Entities.tblGame", b =>
                {
                    b.HasOne("Checkers.PL.Entities.tblGameState", "GameState")
                        .WithMany("tblGames")
                        .HasForeignKey("GameStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Checkers.PL.Entities.tblUserGame", null)
                        .WithMany("tblGames")
                        .HasForeignKey("tblUserGameId");

                    b.Navigation("GameState");
                });

            modelBuilder.Entity("Checkers.PL.Entities.tblUser", b =>
                {
                    b.HasOne("Checkers.PL.Entities.tblUserGame", null)
                        .WithMany("tblUsers")
                        .HasForeignKey("tblUserGameId");
                });

            modelBuilder.Entity("Checkers.PL.Entities.tblUserGame", b =>
                {
                    b.HasOne("Checkers.PL.Entities.tblGame", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Checkers.PL.Entities.tblUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Checkers.PL.Entities.tblGameState", b =>
                {
                    b.Navigation("tblGames");
                });

            modelBuilder.Entity("Checkers.PL.Entities.tblUserGame", b =>
                {
                    b.Navigation("tblGames");

                    b.Navigation("tblUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
