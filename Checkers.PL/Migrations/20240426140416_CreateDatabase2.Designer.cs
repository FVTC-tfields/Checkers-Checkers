// <auto-generated />
using System;
using Checkers.PL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Checkers.PL.Migrations
{
    [DbContext(typeof(CheckersEntities))]
    [Migration("20240426140416_CreateDatabase2")]
    partial class CreateDatabase2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Checkers.PL.Entities.tblGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("GameDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("GameStateId")
                        .IsUnicode(false)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Winner")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("tblUserGameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblGame_Id");

                    b.HasIndex("GameStateId");

                    b.HasIndex("tblUserGameId");

                    b.ToTable("tblGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2ff78b93-aad9-4033-8752-032b5130ebb8"),
                            GameDate = new DateTime(2024, 4, 26, 9, 4, 15, 897, DateTimeKind.Local).AddTicks(7576),
                            GameStateId = new Guid("947dead7-573d-4fbb-82fe-aa86b0134215"),
                            Name = "Example",
                            Winner = ""
                        },
                        new
                        {
                            Id = new Guid("31637e01-7048-4de7-81f7-94d1744f702c"),
                            GameDate = new DateTime(2024, 4, 26, 9, 4, 15, 897, DateTimeKind.Local).AddTicks(7618),
                            GameStateId = new Guid("edce4d88-e5c4-4bf5-8d5b-32e7acf52dd0"),
                            Name = "George",
                            Winner = ""
                        },
                        new
                        {
                            Id = new Guid("f59423ae-53ee-43d6-8990-0ee3d42cb4bd"),
                            GameDate = new DateTime(2024, 4, 26, 9, 4, 15, 897, DateTimeKind.Local).AddTicks(7621),
                            GameStateId = new Guid("1b2016ce-b4da-4f0e-8314-24aeca258e10"),
                            Name = "Hanna",
                            Winner = ""
                        },
                        new
                        {
                            Id = new Guid("eb1201de-4a8d-4935-a370-978e89cdc055"),
                            GameDate = new DateTime(2024, 4, 26, 9, 4, 15, 897, DateTimeKind.Local).AddTicks(7623),
                            GameStateId = new Guid("1f744961-4ab6-48e5-962d-e468ab75618f"),
                            Name = "World War 42",
                            Winner = "MetalWhee3l"
                        });
                });

            modelBuilder.Entity("Checkers.PL.Entities.tblGameState", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Column")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsKing")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblGameState_Id");

                    b.ToTable("tblGameState", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("947dead7-573d-4fbb-82fe-aa86b0134215"),
                            Column = "4",
                            IsKing = true,
                            Row = "1"
                        },
                        new
                        {
                            Id = new Guid("edce4d88-e5c4-4bf5-8d5b-32e7acf52dd0"),
                            Column = "4",
                            IsKing = false,
                            Row = "5"
                        },
                        new
                        {
                            Id = new Guid("1b2016ce-b4da-4f0e-8314-24aeca258e10"),
                            Column = "8",
                            IsKing = false,
                            Row = "2"
                        },
                        new
                        {
                            Id = new Guid("585d0c90-fddd-4ba5-9f37-23185ae7644f"),
                            Column = "10",
                            IsKing = false,
                            Row = "1"
                        },
                        new
                        {
                            Id = new Guid("1f744961-4ab6-48e5-962d-e468ab75618f"),
                            Column = "1",
                            IsKing = true,
                            Row = "7"
                        });
                });

            modelBuilder.Entity("Checkers.PL.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<Guid?>("tblUserGameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblUser_Id");

                    b.HasIndex("tblUserGameId");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e4fa4897-677f-4826-8a32-78aaf2c5de2a"),
                            FirstName = "Barney",
                            LastName = "Smith",
                            Nickname = "Nickname",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "MetalWhee3l"
                        },
                        new
                        {
                            Id = new Guid("9a857333-5ad2-4bba-88cb-8a0474c5e2da"),
                            FirstName = "John",
                            LastName = "Doro",
                            Nickname = "Nickname",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "jdoro"
                        },
                        new
                        {
                            Id = new Guid("62a497d0-9c0f-498b-b729-8d0bfada05f8"),
                            FirstName = "Brian",
                            LastName = "Foote",
                            Nickname = "Nickname",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "bfoote"
                        },
                        new
                        {
                            Id = new Guid("5f2cb212-0cc9-4643-bf7c-f7fbbb55994c"),
                            FirstName = "Other",
                            LastName = "Other",
                            Nickname = "Nickname",
                            Password = "X1BEO/529yeajg8vCpiXXNv/OOk=",
                            UserName = "sophie"
                        });
                });

            modelBuilder.Entity("Checkers.PL.Entities.tblUserGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("GameId")
                        .IsUnicode(false)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .IsUnicode(false)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblUserGame_Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("tblUserGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bb71b11e-a60d-4057-94c8-cd9cae3115db"),
                            Color = "Red",
                            GameId = new Guid("2ff78b93-aad9-4033-8752-032b5130ebb8"),
                            UserId = new Guid("e4fa4897-677f-4826-8a32-78aaf2c5de2a")
                        },
                        new
                        {
                            Id = new Guid("fbb9e6c9-43a8-4d85-baa4-2376beb19525"),
                            Color = "Black",
                            GameId = new Guid("2ff78b93-aad9-4033-8752-032b5130ebb8"),
                            UserId = new Guid("9a857333-5ad2-4bba-88cb-8a0474c5e2da")
                        },
                        new
                        {
                            Id = new Guid("0c99b329-2a4c-4cb2-a721-d4112b237bd8"),
                            Color = "Red",
                            GameId = new Guid("2ff78b93-aad9-4033-8752-032b5130ebb8"),
                            UserId = new Guid("62a497d0-9c0f-498b-b729-8d0bfada05f8")
                        });
                });

            modelBuilder.Entity("Checkers.PL.Entities.tblGame", b =>
                {
                    b.HasOne("Checkers.PL.Entities.tblGameState", "GameState")
                        .WithMany("tblGames")
                        .HasForeignKey("GameStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Checkers.PL.Entities.tblUserGame", null)
                        .WithMany("tblGames")
                        .HasForeignKey("tblUserGameId");

                    b.Navigation("GameState");
                });

            modelBuilder.Entity("Checkers.PL.Entities.tblUser", b =>
                {
                    b.HasOne("Checkers.PL.Entities.tblUserGame", null)
                        .WithMany("tblUsers")
                        .HasForeignKey("tblUserGameId");
                });

            modelBuilder.Entity("Checkers.PL.Entities.tblUserGame", b =>
                {
                    b.HasOne("Checkers.PL.Entities.tblGame", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Checkers.PL.Entities.tblUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Checkers.PL.Entities.tblGameState", b =>
                {
                    b.Navigation("tblGames");
                });

            modelBuilder.Entity("Checkers.PL.Entities.tblUserGame", b =>
                {
                    b.Navigation("tblGames");

                    b.Navigation("tblUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
